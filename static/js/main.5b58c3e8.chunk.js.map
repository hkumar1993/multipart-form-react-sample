{"version":3,"sources":["form/form-data/generate-form-data.js","inputs/textarea/textarea.jsx","inputs/radio-group/radio-group.jsx","inputs/dropdown/dropdown.jsx","form/form-page/form-page.jsx","form/form.jsx","app.jsx","index.js"],"names":["generateFormData","inputs","mainForm","websiteForm","productsForm","locationsForm","serviceForm","generalForm","TextArea","id","updateInput","label","className","htmlFor","onChange","e","target","value","placeholder","maxLength","length","RadioGroup","values","map","text","key","type","name","checked","Dropdown","defaultObj","find","val","isDefault","defaultValue","console","log","FormPage","pageData","Component","Fragment","getFormComponent","Form","hideForm","useState","page","setPage","setInputs","formData","canProceed","required","role","onSubmit","preventDefault","currentInputs","onClick","currentPage","window","alert","JSON","stringify","disabled","aria-label","aria-hidden","App","showForm","setShow","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5b58c3e8.chunk.js","sourcesContent":["import mainForm from './main-form.json';\nimport websiteForm from './website-form.json';\nimport productsForm from './products-form.json';\nimport locationsForm from './retail-form.json';\nimport serviceForm from './customer-service.json';\nimport generalForm from './general.json';\n\nconst generateFormData = (inputs) => {\n    switch (inputs['feedback-topic']) {\n        case 'website':\n            return [...mainForm, ...websiteForm];\n        case 'products':\n            return [...mainForm, ...productsForm];\n        case 'locations':\n            return [...mainForm, ...locationsForm];\n        case 'service':\n            return [...mainForm, ...serviceForm];\n        case 'general':\n        default:\n            return [...mainForm, ...generalForm];\n    }\n}\n\nexport default generateFormData;","import React from 'react';\nimport './textarea.scss';\n\nconst TextArea = ({\n    id,\n    inputs,\n    updateInput,\n    label,\n}) => {\n    return (\n        <div className=\"text-area-container\">\n            <label htmlFor={id}>\n                {label}\n            </label>\n            <textarea\n                id={id}\n                onChange={(e) => updateInput(id, e.target.value)}\n                placeholder=\"Your answer\"\n                maxLength=\"1000\"\n                value={inputs[id] || ''}\n            />\n            <span className=\"characters-left\">\n                {1000 - (inputs[id] || '').length} characters left\n            </span>\n        </div>\n    )\n}\n\nexport default TextArea;","import React from 'react';\nimport './radio-group.scss';\n\nconst RadioGroup = ({\n    id,\n    inputs,\n    updateInput,\n    label,\n    values = [],\n    className = '',\n}) => {\n    return (\n        <div className={`radio-group-container ${className}`}>\n            <label htmlFor={id}>{label}</label>\n            <fieldset id={id}>\n                {values.map(({ text, value }) => {\n                    return (\n                        <div className=\"option\" key={value}>\n                            <input\n                                id={`${id}-${value}`}\n                                type=\"radio\"\n                                name={id}\n                                onChange={(e) => updateInput(id, value)}\n                                checked={inputs[id] === value}\n                                value={value}\n                            />\n                            <label htmlFor={`${id}-${value}`} className=\"radio-input\" key={value}>\n                                {text}\n                            </label>\n                        </div>\n                    )\n                })}\n            </fieldset>\n        </div>\n    );\n}\n\nexport default RadioGroup;","import React from 'react';\nimport './dropdown.scss';\n\nconst Dropdown = ({\n    id,\n    label,\n    inputs,\n    updateInput,\n    values = [],\n}) => {\n    const defaultObj = values.find((val) => val.isDefault);\n    const defaultValue = defaultObj && defaultObj.value;\n    console.log(defaultObj, defaultValue)\n    return (\n        <div className=\"dropdown-container\">\n            <label htmlFor={id}>{label}</label>\n            <select\n                name={id}\n                id={id}\n                defaultValue={defaultValue}\n                value={inputs[id]}\n                onChange={(e) => updateInput(id, e.target.value)}\n            >\n                {values.map(({ text, value, isDefault }) => {\n                    return (\n                        <option value={value} key={value}>{text}</option>\n                    )\n                })}\n            </select>\n        </div>\n    )\n}\n\nexport default Dropdown;","import React, { Fragment } from 'react';\nimport TextArea from '../../inputs/textarea/textarea';\nimport RadioGroup from '../../inputs/radio-group/radio-group';\nimport Dropdown from '../../inputs/dropdown/dropdown';\n\nconst getFormComponent = (type) => {\n    switch(type) {\n        case 'textarea':\n            return TextArea;\n        case 'radio':\n            return RadioGroup;\n        case 'dropdown':\n            return Dropdown;\n        default:\n            return Fragment;\n    }\n}\n\nconst FormPage = ({\n    updateInput,\n    inputs,\n    pageData,\n}) => {\n\n    const Component = getFormComponent(pageData.type);\n\n    return (\n        <section>\n            <Component\n                inputs={inputs}\n                updateInput={updateInput}\n                {...pageData}\n            />\n        </section>\n    )\n}\n\nexport default FormPage;","import React, { useState } from 'react';\nimport './form.scss';\nimport generateFormData from './form-data/generate-form-data';\nimport FormPage from './form-page/form-page';\n\nconst Form = ({ hideForm }) => {\n    const [page, setPage] = useState(0);\n\n    const [inputs, setInputs] = useState({});\n    const updateInput = (key, value) => {\n        setInputs((currentInputs) => ({ ...currentInputs, [key]: value }));\n    };\n\n    const formData = generateFormData(inputs);\n    const pageData = formData[page];\n    const canProceed = pageData.required ? (!!inputs[pageData.id] || inputs[pageData.id] === 0) : true;\n    return (\n        <div className=\"form-modal-container\">\n            <div className=\"form-modal\" role=\"dialog\">\n                <h2>Brand Name</h2>\n                <form\n                    onSubmit={(e) => {\n                        e.preventDefault();\n                    }}\n                >\n                    <FormPage\n                        inputs={inputs}\n                        updateInput={updateInput}\n                        pageData={pageData}\n                    />\n                    <section className=\"buttons-container\">\n                        {page > 0 ? (\n                            <button onClick={() => setPage((currentPage) => currentPage - 1)}>\n                                Previous\n                            </button>\n                        ) : <div></div>}\n                        {page === formData.length - 1 ? (\n                            <button\n                                onClick={() => window.alert(`Submitted! \\n ${JSON.stringify(inputs)}` )}\n                                disabled={!canProceed}\n                            >\n                                Submit\n                            </button>\n                        ) : (\n                            <button\n                                onClick={() => setPage((currentPage) => currentPage + 1)}\n                                disabled={!canProceed}\n                            >\n                                Next\n                            </button>\n                        )}\n                    </section>\n                </form>\n                <button aria-label=\"Close\" className=\"close-btn\" onClick={hideForm}>\n                    <span aria-hidden=\"true\">X</span>\n                </button>\n            </div>\n        </div>\n    )\n}\n\nexport default Form;","import React, { useState } from 'react';\nimport './app.scss';\nimport Form from './form/form';\n\nconst App = () => {\n    const [showForm, setShow] = useState(false);\n    return (\n        <>\n            {showForm ?\n                <Form hideForm={() => setShow(false)} /> :\n                <button onClick={() => setShow(true)}>Feedback</button>\n            }\n        </>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './app';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('multi-step-form')\n);\n"],"sourceRoot":""}